SEMGET(2)                  Linux Programmer's Manual                 SEMGET(2)

NNAAMMEE
       semget - get a System V semaphore set identifier

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<ssyyss//ttyyppeess..hh>>
       ##iinncclluuddee <<ssyyss//iippcc..hh>>
       ##iinncclluuddee <<ssyyss//sseemm..hh>>

       iinntt sseemmggeett((kkeeyy__tt _k_e_y,, iinntt _n_s_e_m_s,, iinntt _s_e_m_f_l_g));;

DDEESSCCRRIIPPTTIIOONN
       The  sseemmggeett() system call returns the System V semaphore set identifier
       associated with the argument _k_e_y.  A new set  of  _n_s_e_m_s  semaphores  is
       created  if  _k_e_y  has the value IIPPCC__PPRRIIVVAATTEE or if no existing semaphore
       set is associated with _k_e_y and IIPPCC__CCRREEAATT is specified in _s_e_m_f_l_g.

       If _s_e_m_f_l_g specifies both IIPPCC__CCRREEAATT and IIPPCC__EEXXCCLL  and  a  semaphore  set
       already  exists  for _k_e_y, then sseemmggeett() fails with _e_r_r_n_o set to EEEEXXIISSTT.
       (This is analogous to the effect of the combination  OO__CCRREEAATT  ||  OO__EEXXCCLL
       for ooppeenn(2).)

       Upon  creation,  the  least  significant  9 bits of the argument _s_e_m_f_l_g
       define the permissions (for owner, group and others) for the  semaphore
       set.   These  bits  have  the same format, and the same meaning, as the
       _m_o_d_e argument of ooppeenn(2) (though the execute permissions are not  mean‐
       ingful  for  semaphores, and write permissions mean permission to alter
       semaphore values).

       When creating a new semaphore set, sseemmggeett() initializes the set's asso‐
       ciated data structure, _s_e_m_i_d___d_s (see sseemmccttll(2)), as follows:

              _s_e_m___p_e_r_m_._c_u_i_d  and _s_e_m___p_e_r_m_._u_i_d are set to the effective user ID
              of the calling process.

              _s_e_m___p_e_r_m_._c_g_i_d and _s_e_m___p_e_r_m_._g_i_d are set to the effective group ID
              of the calling process.

              The  least  significant  9  bits of _s_e_m___p_e_r_m_._m_o_d_e are set to the
              least significant 9 bits of _s_e_m_f_l_g.

              _s_e_m___n_s_e_m_s is set to the value of _n_s_e_m_s.

              _s_e_m___o_t_i_m_e is set to 0.

              _s_e_m___c_t_i_m_e is set to the current time.

       The argument _n_s_e_m_s can be 0 (a don't care) when a semaphore set is  not
       being  created.   Otherwise, _n_s_e_m_s must be greater than 0 and less than
       or equal  to  the  maximum  number  of  semaphores  per  semaphore  set
       (SSEEMMMMSSLL).

       If the semaphore set already exists, the permissions are verified.

RREETTUURRNN VVAALLUUEE
       If successful, the return value will be the semaphore set identifier (a
       nonnegative integer), otherwise, -1 is returned, with _e_r_r_n_o  indicating
       the error.

EERRRROORRSS
       On failure, _e_r_r_n_o will be set to one of the following:

       EEAACCCCEESS A semaphore set exists for _k_e_y, but the calling process does not
              have permission to  access  the  set,  and  does  not  have  the
              CCAAPP__IIPPCC__OOWWNNEERR capability.

       EEEEXXIISSTT IIPPCC__CCRREEAATT and IIPPCC__EEXXCCLL were specified in _s_e_m_f_l_g, but a semaphore
              set already exists for _k_e_y.

       EEIINNVVAALL _n_s_e_m_s is less than 0 or greater than the limit on the number  of
              semaphores per semaphore set (SSEEMMMMSSLL).

       EEIINNVVAALL A  semaphore  set corresponding to _k_e_y already exists, but _n_s_e_m_s
              is larger than the number of semaphores in that set.

       EENNOOEENNTT No semaphore set exists for  _k_e_y  and  _s_e_m_f_l_g  did  not  specify
              IIPPCC__CCRREEAATT.

       EENNOOMMEEMM A  semaphore  set has to be created but the system does not have
              enough memory for the new data structure.

       EENNOOSSPPCC A semaphore set has to be created but the system limit  for  the
              maximum  number  of  semaphore sets (SSEEMMMMNNII), or the system wide
              maximum number of semaphores (SSEEMMMMNNSS), would be exceeded.

CCOONNFFOORRMMIINNGG TTOO
       SVr4, POSIX.1-2001.

NNOOTTEESS
       The inclusion of _<_s_y_s_/_t_y_p_e_s_._h_> and _<_s_y_s_/_i_p_c_._h_> isn't required on  Linux
       or by any version of POSIX.  However, some old implementations required
       the inclusion of these header files, and the SVID also documented their
       inclusion.   Applications  intended  to be portable to such old systems
       may need to include these header files.

       IIPPCC__PPRRIIVVAATTEE isn't a flag field but a _k_e_y___t type.  If this special value
       is  used for _k_e_y, the system call ignores all but the least significant
       9 bits of _s_e_m_f_l_g and creates a new semaphore set (on success).

   SSeemmaapphhoorree iinniittiiaalliizzaattiioonn
       The values of the semaphores in a newly created set are  indeterminate.
       (POSIX.1-2001  and  POSIX.1-2008  are  explicit on this point, although
       POSIX.1-2008 notes that a future version of the standard may require an
       implementation  to  initialize  the  semaphores to 0.)  Although Linux,
       like many other implementations, initializes the semaphore values to 0,
       a  portable  application cannot rely on this: it should explicitly ini‐
       tialize the semaphores to the desired values.

       Initialization can be done using sseemmccttll(2) SSEETTVVAALL or SSEETTAALLLL  operation.
       Where  multiple  peers  do not know who will be the first to initialize
       the set, checking for a nonzero _s_e_m___o_t_i_m_e in the associated data struc‐
       ture  retrieved  by a sseemmccttll(2) IIPPCC__SSTTAATT operation can be used to avoid
       races.

   SSeemmaapphhoorree lliimmiittss
       The following limits on semaphore set  resources  affect  the  sseemmggeett()
       call:

       SSEEMMMMNNII System-wide  limit  on  the  number of semaphore sets.  On Linux
              systems before version 3.19, the default value  for  this  limit
              was  128.   Since  Linux  3.19, the default value is 32,000.  On
              Linux, this limit can be read and modified via the fourth  field
              of _/_p_r_o_c_/_s_y_s_/_k_e_r_n_e_l_/_s_e_m.

       SSEEMMMMSSLL Maximum number of semaphores per semaphore ID.  On Linux systems
              before version 3.19, the default value for this limit  was  250.
              Since  Linux  3.19, the default value is 32,000.  On Linux, this
              limit  can  be  read  and  modified  via  the  first  field   of
              _/_p_r_o_c_/_s_y_s_/_k_e_r_n_e_l_/_s_e_m.

       SSEEMMMMNNSS System-wide  limit on the number of semaphores: policy dependent
              (on Linux, this limit can be read and modified  via  the  second
              field  of  _/_p_r_o_c_/_s_y_s_/_k_e_r_n_e_l_/_s_e_m).  Note that the number of sema‐
              phores system-wide is also limited by the product of SSEEMMMMSSLL  and
              SSEEMMMMNNII.

BBUUGGSS
       The name choice IIPPCC__PPRRIIVVAATTEE was perhaps unfortunate, IIPPCC__NNEEWW would more
       clearly show its function.

SSEEEE AALLSSOO
       sseemmccttll(2),   sseemmoopp(2),   ffttookk(3),   ccaappaabbiilliittiieess(7),   sseemm__oovveerrvviieeww(7),
       ssvviippcc(7)

CCOOLLOOPPHHOONN
       This  page  is  part of release 4.04 of the Linux _m_a_n_-_p_a_g_e_s project.  A
       description of the project, information about reporting bugs,  and  the
       latest     version     of     this    page,    can    be    found    at
       http://www.kernel.org/doc/man-pages/.

Linux                             2015-02-21                         SEMGET(2)
